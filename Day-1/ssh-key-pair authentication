# 🔑 SSH Key Pair Authentication

SSH **key pair authentication** is a more secure alternative to password authentication.  
It uses a **pair of cryptographic keys**:  

- **Private Key** (kept safe on your local machine)  
- **Public Key** (placed on the server)  

When you try to connect, the server checks if your private key matches the stored public key. If it matches, access is granted — **without typing a password**.  

---

## ⚡ Benefits of Key Pair Authentication
- ✅ Stronger security (harder to brute-force than passwords)  
- ✅ No need to type a password every time  
- ✅ Protects against password-based attacks  
- ✅ Easy automation (scripts, Ansible, etc.)  

---

## 🚀 How It Works (Step by Step)

### 1️⃣ Generate SSH Key Pair
On your **local machine**:  
```bash
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

2️⃣ Copy Public Key to Server

Use the ssh-copy-id command:  ssh-copy-id ubuntu@<public-ip>   OR   
manually append your public key to:  ~/.ssh/authorized_keys

3️⃣ Connect to Server Using SSH Key

Now you can connect without entering a password: ssh ubuntu@<public-ip>

📊 SSH Key Authentication Flow
sequenceDiagram
    participant Client
    participant Server

    Client->>Server: Attempts SSH connection
    Server->>Client: Sends challenge (random data)
    Client->>Server: Encrypts challenge with Private Key
    Server->>Server: Verifies using Public Key
    Server->>Client: Access Granted ✅


